name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix: 
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x64, arm64]
        include:
          - os: ubuntu-latest
            target_os: linux
          - os: windows-latest
            target_os: windows
          - os: macos-latest
            target_os: macos
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    
    - name: Install cross-compilation tools
      if: matrix.target_os == 'linux' && matrix.arch == 'arm64'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Build
      run: |
        # Use the Rust build tool with simplified parameters
        cargo run --bin build-bot -p tools -- --os ${{ matrix.target_os }} --arch ${{ matrix.arch }} --output-dir artifacts
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flex-update-mc-bot-${{ matrix.target_os }}-${{ matrix.arch }}
        path: artifacts/
        retention-days: 7